{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["mtg","require","CardImage","props","state","loading","card","a","where","name","this","response","setState","imageUrl","src","React","Component","CardBank","cardBank","cards","map","cardObj","i","cardArr","className","SectionBuilder","header","text","App","class","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"qgBAGMA,EAAMC,EAAQ,KAGdC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,EACTC,KAAM,MAJS,E,4FAQnB,4BAAAC,EAAA,sEACyBP,EAAIM,KAAKE,MAAM,CAACC,KAAMC,KAAKP,MAAMM,OAD1D,OACQE,EADR,OAEED,KAAKE,SAAS,CAAEN,KAAMK,EAAS,GAAGE,SAAUR,SAAS,IAFvD,gD,0EAKA,WACE,OAAIK,KAAKN,MAAMC,QACN,6CAGJK,KAAKN,MAAME,KAKd,8BACE,qBAAKQ,IAAKJ,KAAKN,MAAME,SALhB,wD,GApBWS,IAAMC,WA+BxBC,E,4JACJ,WACE,IAAIC,EAQJ,OAPAA,EAAWR,KAAKP,MAAMgB,MAAMC,KAAI,SAACC,EAASC,EAAGC,GAC3C,OACE,cAAC,EAAD,CACEd,KAAMc,EAAQD,QAKlB,qBAAKE,UAAU,YAAf,SAA4BN,Q,GAXXH,IAAMC,WAgBvBS,E,kDACJ,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,EACTC,KAAM,MAJS,E,0CAQnB,WACE,OAAII,KAAKN,MAAMC,QACN,6CAIP,gCACE,6BAAKK,KAAKP,MAAMuB,SAChB,8BACE,4BAAIhB,KAAKP,MAAMwB,SAEjB,8BACE,cAAC,EAAD,CAAUR,MAAOT,KAAKP,MAAMgB,iB,GArBTJ,IAAMC,WA4B7BY,E,kDACJ,WAAYzB,GAAQ,uCACZA,G,0CAGR,WACE,OACE,gCACE,4CAAc,mBAAG0B,MAAM,eACvB,4CAAc,mBAAGA,MAAM,eACvB,4CAAc,mBAAGA,MAAM,eACvB,4CAAc,mBAAGA,MAAM,eACvB,4CAAc,mBAAGA,MAAM,eACvB,cAAC,EAAD,CACEH,OAAO,YACPC,KAAK,eACLR,MAAO,CAAC,WAAY,QAAS,+BAE/B,cAAC,EAAD,CACEO,OAAO,YACPC,KAAK,iBACLR,MAAO,CAAC,SAAU,cAAe,mBAAoB,QAAS,WAAY,WAAY,mB,GArB9EJ,IAAMC,WA4BTY,IACfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SC9GjD,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdL,IAASC,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFX,SAASC,eAAe,SAM1BC,M","file":"static/js/main.cbd52dbb.chunk.js","sourcesContent":["import './App.css';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nconst mtg = require('mtgsdk');\n\n\nclass CardImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      card: null\n    }\n  }\n\n  async componentDidMount() {\n    const response = await mtg.card.where({name: this.props.name});\n    this.setState({ card: response[0].imageUrl, loading: false });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n\n    if (!this.state.card) {\n      return <div>didn't get a card</div>;\n    }\n\n    return (\n      <div>\n        <img src={this.state.card} />\n      </div>\n    );\n  }\n}\n\nclass CardBank extends React.Component {\n  render() {\n    let cardBank;\n    cardBank = this.props.cards.map((cardObj, i, cardArr) => {\n      return (\n        <CardImage\n          name={cardArr[i]}\n        />\n      )\n    });\n    return (\n      <div className='card-bank'>{cardBank}</div>\n    );\n  }\n}\n\nclass SectionBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      card: null\n    };\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n\n    return (\n      <div>\n        <h2>{this.props.header}</h2>\n        <div>\n          <p>{this.props.text}</p>\n        </div>\n        <div>\n          <CardBank cards={this.props.cards} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Heading 1 <i class=\"ms ms-g\"></i></h1>\n        <h2>Heading 2 <i class=\"ms ms-r\"></i></h2>\n        <h3>Heading 3 <i class=\"ms ms-u\"></i></h3>\n        <h4>Heading 4 <i class=\"ms ms-b\"></i></h4>\n        <h5>Heading 5 <i class=\"ms ms-w\"></i></h5>\n        <SectionBuilder\n          header=\"section 1\"\n          text=\"section text\"\n          cards={[\"Mountain\", \"Swamp\", \"Gray Merchant of Asphodel\"]}\n        />\n        <SectionBuilder\n          header=\"section 2\"\n          text=\"section 2 text\"\n          cards={[\"Island\", \"Barren Moor\", \"Urza, Headmaster\", \"Birds\", \"Mountain\", \"Mountain\", \"Avacyn\"]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\nReactDOM.render(<App />, document.getElementById(\"root\"))\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}